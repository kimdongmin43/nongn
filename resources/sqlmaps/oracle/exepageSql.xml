<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ExepageDao">

	<select id="selectExepagePageList" parameterType="Map" resultType="camelMap">
		/* kr.apfs.local.exepage.dao.impl.ExepageDao.selectExepagePageList
		*/

		<if test='exeCd == "1"'>
		SELECT
		d.exe_id
		,d.site_id
		,d.rank_id
		,b.rank_nm
		,d.exe_nm
		,d.attach_id
		,e.file_path
		,d.reg_user_id
		,d.reg_dt
		,d.upd_user_id
		,d.upd_dt
		,d.use_yn
		,d.del_yn
		,RANK () OVER(PARTITION BY b.sort ORDER BY b.sort ASC,d.sort ASC ,d.exe_nm ASC) as sort
		FROM ts_exe d
		JOIN ts_exerank b
		ON d.rank_id = b.rank_id
		LEFT OUTER JOIN tc_attachfile e
		ON d.attach_id = e.attach_id
		WHERE 1 = 1
		AND d.site_id = #{*siteId}
		AND d.del_yn = 'N'
		AND d.exe_cd = #{exeCd}
		ORDER BY b.sort ASC , d.sort ASC
		</if>
		<if test='exeCd == "2"'>
		SELECT
		d.exe_id
		,d.site_id
		,d.rank_id
		,'의원' as rank_nm
		,d.exe_nm
		,d.attach_id
		,e.file_path
		,d.reg_user_id
		,d.reg_dt
		,d.upd_user_id
		,d.upd_dt
		,d.use_yn
		,d.del_yn
		,RANK () OVER(ORDER BY d.sort ASC ,d.exe_nm ASC) as sort
		FROM ts_exe d
		LEFT OUTER JOIN tc_attachfile e
		ON d.attach_id = e.attach_id
		WHERE 1 = 1
		AND d.site_id = #{*siteId}
		AND d.del_yn = 'N'
		AND d.exe_cd = #{exeCd}
		ORDER BY d.sort ASC
		</if>

	</select>

	<select id="selectExepageList" parameterType="Map" resultType="hashmap">
		/* kr.apfs.local.exepage.dao.impl.ExepageDao.selectExepageList */
		SELECT ROWNUM AS RNUM,
		page_id
		,title
		,satis_yn
		,meta_keyword
		,reg_user_id
		,(select user_nm from t_user where user_id = a.reg_user_id) as reg_usernm
		,GET_DATEFORMAT(reg_dt) as regDt
		FROM ts_exe a
		WHERE 1 = 1
		<if test='title != null and !title.equals("")'>
			AND title = #{title}
		</if>
		<if test='contents != null and !contents.equals("")'>
			AND contents = #{contents}
		</if>
			AND del_yn = 'N'
	</select>

	<select id="selectExepage" parameterType="Map" resultType="hashmap">
		/* kr.apfs.local.exepage.dao.impl.ExepageDao.selectExepage */
		<![CDATA[
			SELECT CD_TP, CD AS code, CD_NM AS value FROM LINKD_INSU99.INSU_LINK.dbo.FITComCd WHERE CD_TP = #{codeType}
		]]>
	</select>

	<select id="selectExepage2" resultType="camelMap" parameterType="Map">
		/* kr.apfs.local.exepage.dao.impl.ExepageDao.selectExepage */
		<![CDATA[
			SELECT
			  [시도시군구],
			  SUM([위험보험료]) AS [위험보험료],
			  SUM([가입금액]) AS [가입금액],
			  SUM([지급금액]) AS [지급금액],
			  SUM([보험금지급건수]) AS [보험금지급건수],
        	  SUM([인원]) AS [인원]
			FROM
			(
			  SELECT
			    SUBSTRING([시도시군구], 1, 2) AS [시도시군구],
			    SUM([위험보험료]) AS [위험보험료],
			    SUM([가입금액]) AS [가입금액],
			    SUM([지급금액]) AS [지급금액],
			    SUM([보험금지급건수]) AS [보험금지급건수],
          		SUM([농가수]) AS [인원]
			  FROM
			  (
			    SELECT
			      SUBSTRING([시도시군구], 1, 5) AS [시도시군구],
			      [위험보험료],
			      ([가입금액] + [가축가입금액] + [축사가입금액]) AS [가입금액],
			      [보험금지급금액] AS [지급금액],
			      [보험금지급건수],
           		  [농가수]
			    FROM LINKD_INSU99.INSU_LINK.dbo.TB_499M_TOT
			    WHERE [기준년월] = #{gijunDt}
			    ]]>
			<if test='pCode != null and !pCode.equals("")'>
			<![CDATA[
				AND [보험품목] = #{pCode}
			]]>
			</if>
			<![CDATA[
			  ) AA
			  GROUP BY [시도시군구]
			) BB
			GROUP BY [시도시군구]
			UNION ALL
			SELECT
			  [시도시군구],
			  SUM([위험보험료]) AS [위험보험료],
			  SUM([가입금액]) AS [가입금액],
			  SUM([지급금액]) AS [지급금액],
			  SUM([보험금지급건수]) AS [보험금지급건수],
        SUM([농가수]) AS [인원]
			FROM
			(
			  SELECT
			    SUBSTRING([시도시군구], 1, 5) AS [시도시군구],
			    [위험보험료],
			    ([가입금액] + [가축가입금액] + [축사가입금액]) AS [가입금액],
			    [보험금지급금액] AS [지급금액],
			    [보험금지급건수],
         		[농가수]
			  FROM LINKD_INSU99.INSU_LINK.dbo.TB_499M_TOT
			  WHERE [기준년월] = #{gijunDt}
			   ]]>
			<if test='pCode != null and !pCode.equals("")'>
			<![CDATA[
				AND [보험품목] = #{pCode}
			]]>
			</if>
			<![CDATA[
			) AA
			GROUP BY [시도시군구]
		]]>
	 </select>

	<select id="selectExepageExist" parameterType="Map" resultType="integer">
		SELECT /*
		kr.apfs.local.contents.dao.impl.ExepageDao.selectExepageExist */
		count(*)
		FROM ts_exe
		WHERE site_id = #{*siteId}

	</select>

	<insert id="insertExepage" parameterType="Map">
		/* kr.apfs.local.exepage.dao.impl.ExepageDao.insertExepage */
		INSERT INTO
		ts_exe (
		exe_id
		,rank_id
		,site_id
		,exe_nm
		,exe_cd
		,company_nm
		,rank_nm
		,tel
		,homepage
		,attach_id
		,reg_user_id
		,reg_dt
		,use_yn
		,del_yn
		,sort
		) VALUES (
		(SELECT NVL(MAX(exe_id),0)+1 FROM ts_exe)
		,#{rankId}
		,#{*siteId}
		,#{exeNm}
		,#{exeCd}
		,#{companyNm}
		,#{rankNm}
		,#{tel1}+'^'+#{tel2}+'^'+#{tel3}
		,#{homepage}
		,#{attachId}
		,#{*userId}
		,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		,'Y'
		,'N'
		,(SELECT NVL(MAX(sort),0)+1 FROM ts_exe WHERE site_id = #{*siteId} AND	del_yn = 'N' AND exe_cd = #{exeCd})
		)
	</insert>

	<update id="updateExepage" parameterType="Map">
		/* kr.apfs.local.exepage.dao.impl.ExepageDao.updateExepage */
		UPDATE
		ts_exe
		SET
		exe_nm = #{exeNm}
		,company_nm = #{companyNm}
		,rank_id = #{rankId}
		,exe_cd = #{exeCd}
		,rank_nm = #{rankNm}
		,homepage = #{homepage}
		,tel = #{tel1}+'^'+#{tel2}+'^'+#{tel3}
		,attach_id = #{attachId}

		,upd_user_id = #{*userId}
		,upd_dt = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')


		<if test='file != null and !file.equals("")'>
			,group_id = #{group_id_upd}
		</if>
		WHERE exe_id = #{exeId}
	</update>

	<delete id="deleteExepage" parameterType="Map">
		/* kr.apfs.local.exepage.dao.impl.ExepageDao.deleteExepage */
		UPDATE
		ts_exe
		SET
		del_yn = 'Y'
		WHERE exe_id = #{exeId}
	</delete>

	<update id="updateExepageSort" parameterType="Map">
		UPDATE
		ts_exe
		SET
		sort = #{sort}
		WHERE
		1=1
		AND exe_id = #{exeId}


	</update>


	<select id="selectExeRankList" parameterType="Map" resultType="camelMap">

		SELECT
		rank_id
		,site_id
		,rank_nm
		,reg_user_id
		,reg_dt
		,upd_user_id
		,upd_dt
		,use_yn
		,del_yn
		,sort
		FROM
		ts_exerank
		WHERE
		1=1
		AND site_id = #{*siteId}
		AND del_yn = 'N'

		<if test='searchtxt != null and !searchtxt.equals("")'>
			AND rank_nm LIKE '%' + #{searchtxt} + '%'
		</if>
		ORDER BY sort ASC


	</select>


	<insert id="insertExeRank" parameterType="Map">
		INSERT INTO ts_exerank
		(
		rank_id
		,site_id
		,rank_nm
		,reg_user_id
		,reg_dt
		,use_yn
		,del_yn
		,sort
		)
		VALUES
		(
		(SELECT NVL(MAX(rank_id),0)+1 FROM ts_exerank)
		,#{*siteId}
		,#{rankNm}
		,#{*userId}
		,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		,'Y'
		,'N'
		,(SELECT NVL(MAX(sort),0)+1 FROM ts_exerank WHERE site_id = #{*siteId} AND
		del_yn = 'N')
		)

	</insert>
	<update id="updateRankReorder" parameterType="Map">
		UPDATE
		ts_exerank
		SET
		sort = #{sort}
		WHERE
		1=1
		AND rank_id = #{rankId}

	</update>
	<update id="updateRank" parameterType="Map">
		UPDATE ts_exerank
		SET
		rank_nm = #{rankNm}
		,upd_user_id = #{*userId}
		,upd_dt = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		WHERE
		1=1
		AND rank_id = #{rankId}
	</update>



	<select id="selectRank" parameterType="Map" resultType="camelMap">
		SELECT
		rank_id
		,rank_nm
		FROM
		ts_exerank
		WHERE
		1=1
		AND rank_id = #{rankId}
		AND del_yn = 'N'

	</select>

	<delete id="deleteRank" parameterType="Map">
		UPDATE ts_exerank
		SET
		del_yn = 'Y'
		,upd_user_id = #{*userId}
		,upd_dt = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		WHERE
		1=1
		AND rank_id = #{rankId}

	</delete>










	<select id="selectExeDeptList" parameterType="Map" resultType="camelMap">

		SELECT
		dept_id
		,site_id
		,dept_nm
		,reg_user_id
		,reg_dt
		,upd_user_id
		,upd_dt
		,use_yn
		,del_yn
		,sort
		FROM
		ts_exedept
		WHERE
		1=1
		AND site_id = #{*siteId}
		AND del_yn = 'N'

		<if test='searchTxt != null and !searchTxt.equals("")'>
			AND dept_nm LIKE '%' + #{searchTxt} + '%'
		</if>

		ORDER BY sort ASC
	</select>


	<insert id="insertExeDept" parameterType="Map">
		INSERT INTO ts_exedept
		(
		dept_id
		,site_id
		,dept_nm
		,reg_user_id
		,reg_dt
		,use_yn
		,del_yn
		,sort
		)
		VALUES
		(
		(SELECT NVL(MAX(dept_id),0)+1 FROM ts_exedept)
		,#{*siteId}
		,#{deptNm}
		,#{*userId}
		,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		,'Y'
		,'N'
		,(SELECT NVL(MAX(sort),0)+1 FROM ts_exedept WHERE site_id = #{*siteId} AND
		del_yn = 'N')
		)

	</insert>
	<update id="updateDeptReorder" parameterType="Map">
		UPDATE
		ts_exedept
		SET
		sort = #{sort}
		WHERE
		1=1
		AND dept_id = #{deptId}
	</update>
	<update id="updateDept" parameterType="Map">
		UPDATE ts_exedept
		SET
		dept_nm = #{deptNm}
		,upd_user_id = #{*userId}
		,upd_dt = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		WHERE
		1=1
		AND dept_id = #{deptId}
	</update>



	<select id="selectDept" parameterType="Map" resultType="camelMap">
		SELECT
		dept_id
		,dept_nm
		FROM
		ts_exedept
		WHERE
		1=1
		AND dept_id = #{deptId}
		AND del_yn = 'N'

	</select>

	<delete id="deleteDept" parameterType="Map">
		UPDATE ts_exedept
		SET
		del_yn = 'Y'
		,upd_user_id = #{*userId}
		,upd_dt = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		WHERE
		1=1
		AND dept_id = #{deptId}
	</delete>


	<select id="selectExeCd" parameterType="Map" resultType="camelMap">
		SELECT
		code_id
		,code_nm
		FROM
		tc_code
		WHERE
		mst_id = 'EXE_CD'
	</select>
</mapper>
